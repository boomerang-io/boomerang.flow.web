{
  "name": "boomerang.app.flow",
  "version": "0.7.0",
  "private": true,
  "homepage": "https://launch.boomerangplatform.net/BMRG_APP_ROOT_CONTEXT",
  "dependencies": {
    "@boomerang/boomerang-dag": "5.2.1",
    "@boomerang/boomerang-react-scripts": "^4.3.3",
    "@boomerang/boomerang-styles": "2.0.0",
    "@boomerang/boomerang-utilities": "2.3.1",
    "@boomerang/carbon-addons-boomerang": "^2.2.1-beta.34",
    "@boomerang/carbon-addons-boomerang-react": "2.2.1-beta.47",
    "@carbon/charts": "^0.16.24",
    "@carbon/charts-react": "^0.16.24",
    "@carbon/icons-react": "^10.4.1",
    "@projectstorm/react-diagrams": "^5.3.2",
    "axios": "0.18.1",
    "carbon-components": "10.7.3",
    "carbon-components-react": "7.7.3",
    "classnames": "^2.2.6",
    "codemirror": "^5.48.4",
    "cronstrue": "^1.58.0",
    "d3": "<=5.9.2",
    "detect-browser": "^4.0.3",
    "formik": "^2.0.3",
    "history": "4.10.1",
    "immutability-helper": "^3.0.1",
    "js-file-download": "^0.4.4",
    "match-sorter": "^2.3.0",
    "moment-timezone": "^0.5.23",
    "prop-types": "15.7.2",
    "query-string": "^6.8.3",
    "react": "16.10.2",
    "react-codemirror2": "^6.0.0",
    "react-copy-to-clipboard": "^5.0.1",
    "react-dom": "16.10.2",
    "react-dropzone": "^10.1.10",
    "react-hot-loader": "4.12.15",
    "react-json-view": "^1.19.1",
    "react-lazylog": "4.0.0",
    "react-redux": "7.1.1",
    "react-router": "5.0.1",
    "react-router-dom": "5.1.2",
    "redux": "4.0.4",
    "redux-immutable-state-invariant": "2.1.0",
    "redux-thunk": "2.3.0",
    "typeface-ibm-plex-sans": "0.0.75",
    "validator": "^10.7.1",
    "yup": "^0.27.0"
  },
  "scripts": {
    "analyze": "source-map-explorer server/build/static/js/main.*",
    "apiServer": "json-server -c api/json-server.json --watch api/db.json api/routes.json api/middleware/**/*.js",
    "build": "react-scripts build",
    "cm": "git cz",
    "cypress": "cypress open",
    "cypress:run": "$(npm bin)/cypress run --config video=false",
    "dev": "run-p apiServer start",
    "docker": "run-p docker:run apiServer",
    "docker:build": "docker build -t flow:next .",
    "docker:run": "docker run -i -t -p 3000:3000 -e APP_ROOT=/flow -e BASE_SERVICE_ENV_URL=http://localhost:8000 -e PRODUCT_SERVICE_ENV_URL=http://localhost:8000 flow:next",
    "eject": "react-scripts eject",
    "lint": "eslint src",
    "predocker": "run-s build docker:build",
    "preprod": "run-s build prod:installServerDependencies prod:rewriteAssetPaths",
    "prod": "run-p apiServer prod:server",
    "prod:installServerDependencies": "npm --prefix ./server install ./server",
    "prod:rewriteAssetPaths": "cross-env APP_ROOT=/flow node server/scripts/rewriteAssetPaths.js",
    "prod:server": "cd server && npm run-script dev",
    "start": "react-scripts start",
    "test": "is-ci \"test:ci\" \"test:watch\"",
    "test:ci": "react-scripts test --env=jsdom  --coverage --outputFile=mocha.json --json",
    "test:ci-cypress": "start-server-and-test dev http://localhost:3000 cypress:run",
    "test:coverage": "react-scripts test --env=jsdom --coverage",
    "test:staged": "cross-env CI=true react-scripts test --env=jsdom --passWithNoTests",
    "test:static": "eslint -f json -o report.json ./src",
    "test:watch": "react-scripts test --env=jsdom",
    "upgradePackage": "react-scripts upgradePackage"
  },
  "browserslist": {
    "development": [
      "last 2 chrome versions",
      "last 2 firefox versions",
      "last 2 edge versions"
    ],
    "production": [
      "last 2 chrome versions",
      "last 2 firefox versions",
      "last 2 edge versions"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "*.{js,jsx,json,scss,css,md}": [
      "prettier --print-width 120 --write",
      "git add"
    ],
    "src/**/*.{js,jsx}": [
      "npm run-script lint",
      "npm run test:staged"
    ],
    "*": [
      "git add"
    ]
  }
}
